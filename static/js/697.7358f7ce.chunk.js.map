{"version":3,"file":"static/js/697.7358f7ce.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contactsAll/contactsSelectors.js","components/Section/Section.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/contactListItem.js","components/ContactList/ContactList.js","components/Phonebook/Phonebook.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from 'reselect';\n\nexport const itemsSelector = state => state.phonebook.contacts;\nexport const filterSelector = state => state.filter.filter;\nexport const getIsLoadingSelector = state => state.phonebook.isLoading;\nexport const getError = state => state.phonebook.error;\n\nexport const getFilteredContacts = createSelector(\n  [itemsSelector, filterSelector],\n  (contacts, filter) => {\n    const visibleContacts = contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n\n    return visibleContacts;\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ children }) {\n  return <section className=\"section\">{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\n\n\nconst Container=({ children })=> {\n  return <div className=\"container\">{children}</div>;\n}\nexport default  Container;\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postAllContacts } from '../../redux/contactsAll/contactsOperations';\nimport { itemsSelector } from '../../redux/contactsAll/contactsSelectors';\n\nconst ContactForm=()=> {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(itemsSelector);\n\n  //*  берем  данные по сабмиту  кнопки  //\n\n  const addContact = evt => {\n    evt.preventDefault();\n    const checkByName = contacts?.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkByName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contact = {\n        name,\n        number,\n        completed: false,\n      };\n\n      dispatch(postAllContacts(contact));\n      reset();\n    }\n  };\n\n  //*  очищаем   сбрасываем   форму  //\n  const reset = evt => {\n    setName('');\n    setNumber('');\n  };\n\n  // *  прописываем  внутри инпута   //\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={addContact}>\n      <div className=\"inputBox\">\n        <label className=\"inputLabel\">\n          Name\n          <input\n            className=\"inputContent\"\n            type=\"text\"\n            value={name}\n            onChange={handleChange}\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name\"\n            required\n          />\n        </label>\n      </div>\n      <div className=\"inputBox\">\n        <label className=\"inputLabel\">\n          Number\n          <input\n            className=\"inputContent\"\n            type=\"tel\"\n            value={number}\n            onChange={handleChange}\n            name=\"number\"\n            placeholder=\"XXX XXX XXXX\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Number\"\n            required\n          />\n        </label>\n      </div>\n      <button className=\"inputButton\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\nContactForm.prototype = {\n  addContact: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChanges } from 'redux/filter/filterSlice';\nimport { filterSelector } from '../../redux/contactsAll/contactsSelectors';\n\nconst Filter=() =>{\n  const dispatch = useDispatch();\n  const filter = useSelector(filterSelector);\n\n  const onValueChanges = e => {\n    const filterValue = e.currentTarget.value;\n    dispatch(filterChanges(filterValue));\n  };\n\n  return (\n    <form>\n      <div className=\"inputBox\">\n        <label className=\"inputLabel\">\n          Find contacts by name\n          <input\n            className=\"inputContent\"\n            type=\"text\"\n            value={filter}\n            onChange={onValueChanges}\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Filter\"\n            required\n          />\n        </label>\n      </div>\n    </form>\n  );\n}\nexport default Filter;\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onValueChanges: PropTypes.func.isRequired,\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  delAllContacts,\n  editContacts,\n} from '../../redux/contactsAll/contactsOperations';\n\nexport default function  ContactListItem ({ contact }) {\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        return;\n      case 'number':\n        setNumber(value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const deleteContactItem = contactId => {\n    dispatch(delAllContacts(contactId));\n  };\n\n  const handleEdit = () => {\n    setIsEdit(prev => !prev);\n    if (isEdit && (name !== contact.name || number !== contact.number)) {\n      return dispatch(editContacts({ ...contact, name, number }));\n    }\n  };\n\n  return (\n    <li className=\"listContacts\">\n      {isEdit ? (\n        <>\n          {' '}\n          <label>\n            Name\n            <input\n              onChange={handleChange}\n              name=\"name\"\n              type=\"text\"\n              value={name}\n            />\n          </label>\n          {'  '}\n          <label>\n            Number\n            <input\n              onChange={handleChange}\n              name=\"number\"\n              type=\"text\"\n              value={number}\n            />\n          </label>\n        </>\n      ) : (\n        <div className=\"titleContact\">\n          <span className=\"contact\">Name: {contact.name}</span>\n          {'  '}\n          <span className=\"contact\">Number: {contact.number}</span>\n        </div>\n      )}\n      <button className=\"listButton\" type=\"button\" onClick={handleEdit}>\n        {isEdit ? 'Save' : 'Edit'}\n      </button>\n      <button\n        className=\"listButton\"\n        type=\"button\"\n        onClick={() => deleteContactItem(contact.id)}\n      >\n        x\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      contact: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllContacts } from '../../redux/contactsAll/contactsOperations';\nimport {\n  getIsLoadingSelector,\n  getFilteredContacts,\n} from '../../redux/contactsAll/contactsSelectors';\nimport  ContactListItem  from '../ContactListItem';\n\nconst ContactList=()=> {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoadingSelector);\n\n  useEffect(() => {\n    dispatch(getAllContacts(prev => !prev));\n  }, [dispatch]);\n \n  return (\n    <>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {contacts.map((contact, id) => {\n            return <ContactListItem key={contact.id} contact={contact} />;\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n};\nexport default ContactList;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  itemsSelector,\n  getIsLoadingSelector,\n  getError,\n} from '../../redux/contactsAll';\nimport { getAllContacts } from '../../redux/contactsAll/contactsOperations';\n\nimport Section from '../Section';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(itemsSelector);\n  const isLoading = useSelector(getIsLoadingSelector);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(getAllContacts(prev => !prev));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section>\n        <Container>\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm />\n        </Container>\n        {allContacts.length ? (\n          <>\n            <Container>\n              <h2 className=\"title\">Contacts</h2>\n              <Filter />\n              {isLoading && !error && <b>Request in progress...</b>}\n              <ContactList />\n            </Container>\n          </>\n        ) : (\n          <h1 className=\"title\">Phonebook</h1>\n        )}\n      </Section>\n    </>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","itemsSelector","state","phonebook","contacts","filterSelector","filter","getIsLoadingSelector","isLoading","getError","error","getFilteredContacts","contact","toLowerCase","includes","Section","children","className","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","reset","evt","handleChange","e","currentTarget","onSubmit","preventDefault","some","item","alert","completed","postAllContacts","type","onChange","placeholder","pattern","title","required","prototype","addContact","PropTypes","Filter","filterValue","filterChanges","onValueChanges","ContactListItem","isEdit","setIsEdit","target","onClick","editContacts","contactId","id","delAllContacts","useEffect","getAllContacts","Phonebook","allContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}